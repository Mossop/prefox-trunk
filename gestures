# HG changeset patch
# Parent fc4b9d0883feef3311a992c77864a7b413576bfc
# User Dave Townsend <dtownsend@oxymoronical.com>
# Date 1278540967 25200

[palm] support forward and back gestures

diff --git a/widget/src/webos/nsAppShell.cpp b/widget/src/webos/nsAppShell.cpp
--- a/widget/src/webos/nsAppShell.cpp
+++ b/widget/src/webos/nsAppShell.cpp
@@ -77,6 +77,7 @@ nsAppShell::nsAppShell() :
 #endif
     PDL_BannerMessagesEnable(PDL_TRUE);
     PDL_ScreenTimeoutEnable(PDL_TRUE);
+    PDL_GesturesEnable(PDL_TRUE);
 
     mJoystick = SDL_JoystickOpen(0);
     if (!mJoystick)
diff --git a/widget/src/webos/nsWindow.cpp b/widget/src/webos/nsWindow.cpp
--- a/widget/src/webos/nsWindow.cpp
+++ b/widget/src/webos/nsWindow.cpp
@@ -830,6 +830,14 @@ nsWindow::DispatchKeyEvent(PRUint32 msg,
 }
 
 void
+nsWindow::DispatchCommandEvent(nsIAtom *command)
+{
+    nsCommandEvent event(PR_TRUE, nsWidgetAtoms::onAppCommand, command, this);
+    event.time = PR_Now() / 1000;
+    DispatchEvent(&event);
+}
+
+void
 nsWindow::OnKeyEvent(SDL_KeyboardEvent &keyevt)
 {
     switch (keyevt.keysym.sym) {
@@ -845,6 +853,18 @@ nsWindow::OnKeyEvent(SDL_KeyboardEvent &
         gMeta = 0;
         gShift = (gShift + 1) % 3;
         return;
+    case PDLK_GESTURE_BACK:
+        if (keyevt.type != SDL_KEYDOWN)
+            return;
+        DispatchCommandEvent(nsWidgetAtoms::Back);
+        return;
+    case PDLK_GESTURE_FORWARD:
+        if (keyevt.type != SDL_KEYDOWN)
+            return;
+        DispatchCommandEvent(nsWidgetAtoms::Forward);
+        return;
+    case PDLK_GESTURE_AREA:
+        return;
     }
 
     PRUint32 msg;
diff --git a/widget/src/webos/nsWindow.h b/widget/src/webos/nsWindow.h
--- a/widget/src/webos/nsWindow.h
+++ b/widget/src/webos/nsWindow.h
@@ -165,6 +165,7 @@ protected:
     PRUint32 mLastClickTime;
     nsIntPoint mLastClickPosition;
 
+    void DispatchCommandEvent(nsIAtom *command);
     void OnMouseEvent(SDL_Event *sdlevt, nsIntPoint pt);
     void DispatchKeyEvent(PRUint32 msg, SDL_keysym &keysym);
     void OnKeyEvent(SDL_KeyboardEvent &keyevt);
