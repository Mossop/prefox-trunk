# HG changeset patch
# User Dave Townsend <dtownsend@oxymoronical.com>
# Date 1271134518 25200
# Node ID 2e23a88a1792cd2d8816a012e3514cc4522d3098
# Parent  5ab7ee57ac5501afbbadb071d2d05c21d8570836
[palm] Fix build config dependency hacks

diff --git a/config/autoconf.mk.in b/config/autoconf.mk.in
--- a/config/autoconf.mk.in
+++ b/config/autoconf.mk.in
@@ -648,3 +648,4 @@ HAVE_CLOCK_MONOTONIC = @HAVE_CLOCK_MONOT
 REALTIME_LIBS = @REALTIME_LIBS@
 
 WEBOS             = @WEBOS@
+PALM_PDK          = @PALM_PDK@
diff --git a/config/rules.mk b/config/rules.mk
--- a/config/rules.mk
+++ b/config/rules.mk
@@ -99,6 +99,9 @@ VPATH += $(DIST)/lib
 ifdef LIBXUL_SDK
 VPATH += $(LIBXUL_SDK)/lib
 endif
+ifdef PALM_PDK
+VPATH += $(PALM_PDK)/arm-gcc/sysroot/usr/lib
+endif
 
 # EXPAND_LIBNAME - $(call EXPAND_LIBNAME,foo)
 # expands to foo.lib on platforms with import libs and -lfoo otherwise
@@ -836,10 +839,9 @@ DSO_LDOPTS_DEPS = $(EXTRA_DSO_LIBS) $(fi
 
 ifndef _LIBNAME_RELATIVE_PATHS
 
-# XXXMossop dependencies for -lxxx are broken
-#LIBS_DEPS += $(filter -l%, $(LIBS))
-#HOST_LIBS_DEPS += $(filter -l%, $(HOST_LIBS))
-#DSO_LDOPTS_DEPS += $(filter -l%, $(EXTRA_DSO_LDOPTS))
+LIBS_DEPS += $(filter -l%, $(LIBS))
+HOST_LIBS_DEPS += $(filter -l%, $(HOST_LIBS))
+DSO_LDOPTS_DEPS += $(filter -l%, $(EXTRA_DSO_LDOPTS))
 
 _LIBDIRS = $(patsubst -L%,%,$(filter -L%, $(LIBS) $(HOST_LIBS) $(EXTRA_DSO_LDOPTS)))
 ifneq (,$(_LIBDIRS))
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -285,23 +285,20 @@ if test "$target" = "arm-palm-eabi" ; th
         LDFLAGS="$LDFLAGS -Wl,--allow-shlib-undefined"
     fi
 
-    dnl For some reason this configure uses CFLAGS as HOST_CFLAGS.. what gives?
-    if test -z "$HOST_CPPFLAGS" ; then
+    dnl Make sure the host flags don't default to the target flags
+    if test -z "$HOST_CPPFLAGS"; then
         HOST_CPPFLAGS=" "
     fi
-    if test -z "$HOST_CFLAGS" ; then
+    if test -z "$HOST_CFLAGS"; then
         HOST_CFLAGS=" "
     fi
-    if test -z "$HOST_CXXFLAGS" ; then
+    if test -z "$HOST_CXXFLAGS"; then
         HOST_CXXFLAGS=" "
     fi
-    if test -z "$HOST_LDFLAGS" ; then
+    if test -z "$HOST_LDFLAGS"; then
         HOST_LDFLAGS=" "
     fi
 
-    HOST_CC=""
-    HOST_CXX=""
-
     WEBOS=1
     PALM_PDK="${palm_pdk}"
     MOZ_OPTIMIZE_FLAGS="-Os"
diff --git a/js/src/config/autoconf.mk.in b/js/src/config/autoconf.mk.in
--- a/js/src/config/autoconf.mk.in
+++ b/js/src/config/autoconf.mk.in
@@ -339,3 +339,6 @@ WRAP_SYSTEM_INCLUDES = @WRAP_SYSTEM_INCL
 ENABLE_TRACEJIT = @ENABLE_TRACEJIT@
 NANOJIT_ARCH = @NANOJIT_ARCH@
 HAVE_ARM_SIMD= @HAVE_ARM_SIMD@
+
+WEBOS             = @WEBOS@
+PALM_PDK          = @PALM_PDK@
diff --git a/js/src/config/rules.mk b/js/src/config/rules.mk
--- a/js/src/config/rules.mk
+++ b/js/src/config/rules.mk
@@ -99,6 +99,9 @@ VPATH += $(DIST)/lib
 ifdef LIBXUL_SDK
 VPATH += $(LIBXUL_SDK)/lib
 endif
+ifdef PALM_PDK
+VPATH += $(PALM_PDK)/arm-gcc/sysroot/usr/lib
+endif
 
 # EXPAND_LIBNAME - $(call EXPAND_LIBNAME,foo)
 # expands to foo.lib on platforms with import libs and -lfoo otherwise
@@ -836,10 +839,9 @@ DSO_LDOPTS_DEPS = $(EXTRA_DSO_LIBS) $(fi
 
 ifndef _LIBNAME_RELATIVE_PATHS
 
-# XXXMossop dependencies for -lxxx are broken
-#LIBS_DEPS += $(filter -l%, $(LIBS))
-#HOST_LIBS_DEPS += $(filter -l%, $(HOST_LIBS))
-#DSO_LDOPTS_DEPS += $(filter -l%, $(EXTRA_DSO_LDOPTS))
+LIBS_DEPS += $(filter -l%, $(LIBS))
+HOST_LIBS_DEPS += $(filter -l%, $(HOST_LIBS))
+DSO_LDOPTS_DEPS += $(filter -l%, $(EXTRA_DSO_LDOPTS))
 
 _LIBDIRS = $(patsubst -L%,%,$(filter -L%, $(LIBS) $(HOST_LIBS) $(EXTRA_DSO_LDOPTS)))
 ifneq (,$(_LIBDIRS))
diff --git a/js/src/configure.in b/js/src/configure.in
--- a/js/src/configure.in
+++ b/js/src/configure.in
@@ -302,24 +302,25 @@ if test "$target" = "arm-palm-eabi" ; th
     CXXFLAGS="-I$palm_pdk/include $CXXFLAGS"
     LDFLAGS="-L$palm_pdk/device/lib --sysroot=$palm_pdk/arm-gcc/sysroot -Wl,--allow-shlib-undefined $LDFLAGS"
 
-    dnl prevent cross compile section from using these flags as host flags
-    if test -z "$HOST_CPPFLAGS" ; then
+    dnl Make sure the host flags don't default to the target flags
+    if test -z "$HOST_CPPFLAGS"; then
         HOST_CPPFLAGS=" "
     fi
-    if test -z "$HOST_CFLAGS" ; then
+    if test -z "$HOST_CFLAGS"; then
         HOST_CFLAGS=" "
     fi
-    if test -z "$HOST_CXXFLAGS" ; then
+    if test -z "$HOST_CXXFLAGS"; then
         HOST_CXXFLAGS=" "
     fi
-    if test -z "$HOST_LDFLAGS" ; then
+    if test -z "$HOST_LDFLAGS"; then
         HOST_LDFLAGS=" "
     fi
 
-    HOST_CC=""
-    HOST_CXX=""
-
-    AC_DEFINE(WEBOS)
+    WEBOS=1
+    PALM_PDK="${palm_pdk}"
+
+    AC_SUBST(WEBOS)
+    AC_SUBST(PALM_PDK)
     AC_DEFINE(FORCE_LITTLE_ENDIAN)
 fi
 
diff --git a/nsprpub/configure.in b/nsprpub/configure.in
--- a/nsprpub/configure.in
+++ b/nsprpub/configure.in
@@ -222,24 +222,19 @@ if test "$target" = "arm-palm-eabi" ; th
     CXXFLAGS="-I$palm_pdk/include $CXXFLAGS"
     LDFLAGS="-L$palm_pdk/device/lib --sysroot=$palm_pdk/arm-gcc/sysroot -Wl,--allow-shlib-undefined $LDFLAGS"
 
-    dnl prevent cross compile section from using these flags as host flags
-    if test -z "$HOST_CPPFLAGS" ; then
+    dnl Make sure the host flags don't default to the target flags
+    if test -z "$HOST_CPPFLAGS"; then
         HOST_CPPFLAGS=" "
     fi
-    if test -z "$HOST_CFLAGS" ; then
+    if test -z "$HOST_CFLAGS"; then
         HOST_CFLAGS=" "
     fi
-    if test -z "$HOST_CXXFLAGS" ; then
+    if test -z "$HOST_CXXFLAGS"; then
         HOST_CXXFLAGS=" "
     fi
-    if test -z "$HOST_LDFLAGS" ; then
+    if test -z "$HOST_LDFLAGS"; then
         HOST_LDFLAGS=" "
     fi
-
-    HOST_CC=""
-    HOST_CXX=""
-
-    AC_DEFINE(PALM)
 fi
 
 dnl ========================================================
